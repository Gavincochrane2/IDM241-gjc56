html {

}

.trigger {
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    color: rgb(101, 207, 114);
    display: flex;

  justify-items: left;

  box-sizing: border-box;
flex-wrap: wrap;
border-radius: 10px;
background-color: rgb(36, 36, 36);
padding: 30px;


background-size: cover;
}
main .trigger {
  display: flex;
  justify-items: center;
}

body h1, h2{ 
    line-height: 60px;
    padding-left: 10px;
    padding-right: 10px;
    display: flex;
    justify-content: left;
    background-color: rgb(36, 36, 36);
    margin: auto;
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    text-decoration: none;
    border-radius: 10px;
    color: white;
}

.Trigger {
    background-color: rgb(36, 36, 36);
}

main {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    align-self: center;
}

ul {
    display: flex;
    flex-direction: column;
    list-style:circle;
    line-height: 50px;
}
li.title::marker {
  opacity: 0%;
  color: rgb(36, 36, 36);
}

li .title {
    font-weight: bold;
    list-style: none;
}

.Loops {
    flex-direction: column;
}

body p{


}
.border {
    display: flex;
    align-items: left; 
    background-color: rgb(36, 36, 36); 
    padding: 10px; 
    border: 3px;
    border-radius: 30px;
    border-width: 30px;
    border-color: rgb(36, 36, 36);
    line-height: 18px;
    flex-direction: row;
    border-radius: ;
    flex-wrap: wrap;
    
}
div.heading{
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    margin-bottom: 10px;
}
.size {
   margin: auto;
}
div.heading h1 {
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 10px;
}

div.block {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    max-width: fit-content;
    justify-content: left;
}

img {
    max-width: 80%;
    display: flex;
    justify-content: center;
    align-items: center;
}
a {
    text-decoration: none;
    color: rgb(255, 255, 255);
}

.heading { 
    border-radius: 30px;
}

.title{
    text-decoration: underline;
}

.custom-button {
    background-color: green;
    color: rgb(0, 0, 0);
    border: 2px;
    border-style: solid;
    border-radius: 10px;
    padding: 10px 20px;
    position: relative;
    overflow: hidden;
    transition: background-color 0.5s;
    margin-top: 25px;
    font-size: larger;
    max-width: max-content;
    display: flex;
    justify-content: center;
    align-items: center;
    align-self: center;
   /* background-color: green;
    color: rgb(0, 0, 0);
    border: 3px;
    border-style: solid;
    padding: 10px 20px;
    font-size: 16px;
    border-radius: 5px;
    position: relative;
    overflow: hidden;
    transition: color 0.3s, background-color 0.3s;*/
  }

  .custom-button::before {
    content: 'Download';
    position: absolute;
   
    left: 0;
    width: 100%;
    height: 100%;
    background-color: white;
    z-index: 2;
    transition: transform 0.5s, opacity 0.5s;
    transform: translateY(100%);
    color: black;
  
  }
  button {
    z-index: 0;
  }

  .custom-button:focus{
    content: 'Download';
    color: white;
  }
.custom-button:hover::after {
    color: black;
}
  
  .custom-button:hover::before {
    transform: translateY(0);
    font-display: initial;
    opacity: 1;
    content: "Download";
    align-items: center;
    text-align: center;
    padding-top: 20px;
    cursor: pointer;
  }

  #animationToggle:checked + .custom-button {
    animation-play-state: running; /* Resume the animation when the checkbox is checked */
    background-color: green; /* Change to a different color or add loading text if desired */
  }
  
  .hidden-checkbox {
    position: absolute;
    clip: rect(0, 0, 0, 0);
    pointer-events: none;
  }
  
  #animationToggle:not(:checked) + .custom-button {
    animation: none; /* Stop the animation when the checkbox is not checked */
  }

  .interaction {
    background-color: rgb(0, 0, 0);
    border-radius: 20px;
    padding: 10px;
    background-size: contain;
    max-width: fit-content;
    padding-bottom: 100px;
    display: flex;
    justify-content: center;
    flex-direction: column;
    margin-bottom: 20px;
    margin-top: 20px;

}

p, h2, h3.center {
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

main caption {
  display: flex;
  flex-direction: column;
}

div.desc {
  box-sizing: border-box;
  max-width: fit-content;
  display: flex;
  flex-direction: column;
  text-align: center;
 
  
}
div.desc img{
  max-width: 100%;
}

.desc figcaption {
  box-sizing: border-box;
  display: flex;
 max-width: fit-content;
  text-align: center;
  align-items: center;
  justify-content: center;
  align-self: center;
  justify-items: center;
}

@keyframes colorChange {
    0% {
      background-color: black;
      color: white;
    }
    100% {
      background-color: green;
      color: black;
    }
  }
  div .interaction:hover {
    animation-name: colorChange; 
    animation-duration: ease-in-out;  
    color: black;
    animation-direction: alternate;
    
  }
  div .interaction:hover,
div .interaction:hover ~ div {
  animation-duration: 1s;
  background-color: green;
  color: black;
}

.interaction:hover p,
.interaction:hover h2,
.interaction:hover h3 {
  color: black; 
}


@keyframes fadeOut {
  to {
    background-color: black;
  }
}

@media screen and (min-width: 1035px) and (max-width: 1172px) {
  main.trigger {
    flex-direction: column;
  }
}
@keyframes shrinkAndSpin {
  0% {
    transform: scale(1);
    border-radius: 200px;
  }
  50% {
    transform: scale(1);
    border-radius: 200px;
  }
  100% {
    transform: scale(1) rotate(360deg);
    border-radius: 200px;
  }
}

.custom-button {
  padding: 10px 20px;
  background-color: green;
  border: 3px;
  border-style: solid;
  border-radius: 6px;
  border-color: black;
 font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  cursor: pointer;
  transition: background-color 0.3s;
  animation: shrinkAndSpin 1.5s infinite paused; /* Initially paused */
}

label.custom-button:focus {
  animation: shrinkAndSpin 1.5s infinite; /* Adjust the duration as needed */
  background-color: rgb(0, 0, 0); /* Change to a different color or add loading text if desired */
  content: "Downloading";
  border-color: rgb(22, 138, 28);
}

/* .container {
  top: 50%;
  left: 50%;
  position: absolute;
  transform: translate(-50%, -50%);
  
}

.loading {
  width: 50px;
  height: 50px;
  border: 4px solid #f2f2f2;
  border-radius: 50%;
  border-top-color: lightseagreen;
  border-bottom-color: lightseagreen;
  animation: spin 1s infinite ease-in-out;
} */

@keyframes spin {
  0% {
     transform: rotate(0deg);
  }
  100% {
     transform: rotate(360deg);
  }
}

/* .container {
  width: 20rem;
  margin: 2rem auto 0 auto;
}

.login-submit {
  display: block;
  background: #bdf5c8;
  color: #3d3d3d;
  font-family: arial;
  transition: all ease-in-out 250ms;
  transition-property: width, background;
  background-position: center center;
  background-size: contain;
  border: 0.25rem solid grey;
  cursor: pointer;
  height: 4rem;
  line-height: 3rem;
  font-weight: bold;
  width: 100%;
  background-repeat: no-repeat;
  margin: 0 auto;
  text-align: center;
  font-size: 1.5rem;
  overflow: hidden;
}

.login-submit.shrinking {
  width: 4rem;
  height: 4rem;
  font-size: 0;
}

.login-submit.shrinking.loading {
  background: transparent;
  border-top: 0.25rem solid white;
  border-radius: 50%;
  animation: spin 2s linear infinite;
  outline: transparent;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}


 */

  
  /* Animation for radial color transition */
  /*.custom-button::before {
    content: '';
    position: absolute;
    background: radial-gradient(ellipse at center, white, transparent);
    width: 300%;
    height: 300%;
    top: 100%;
    left: 50%;
    transition: top 0.4s ease-out;
    z-index: 0;
  }
  
  .custom-button:hover::before {
    top: 0;
  }
  
  /* Adjust the button appearance on hover */
  /*.custom-button:hover {
    color: rgb(0, 0, 0);
    background-color: white;
  }*/
 
  
  
  
  
  